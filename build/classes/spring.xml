<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean id="test" class="com.mxc.sys.controller.SpringTest"/>

	<!-- 扫描Service -->
	<context:component-scan base-package="com.mxc.*.service" />

	<!-- 1、引入配置文件 -->
	<context:property-placeholder location="classpath:config.properties" />
	<!-- 加载配置文件 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>

		<!-- 配置Druid连接池 -->
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 获取连接等待超时时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 配置捡个多久进行一次检测，检测需要关闭的空闲连接,单位：毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
		<!-- 配置一个连接在池中最小生存时间，单位：毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!-- 创建sqlSessionFactory工厂，数据源注入session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源注入session工厂 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 指定mybatis数据源文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 指定数据映射文件 -->
		<property name="mapperLocations" value="classpath:mxc/mapping/*/**.xml" />
	</bean>


	<!--配置自动扫描dao接口，将mapper接口加入到IOC容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.mxc.*.dao" />
	</bean>


	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="executorType" value="BATCH" />
	</bean>

	<!-- 事务管理配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制住数据源 -->
		<!-- 注入数据库的连接池 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 开启基于注解的事务，使用xml配置形式的事务（必须主要的都是使用配置试） -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.mxc.*.service..*(..))" id="txPoint" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!-- 配置事务在增强，事务如何切入 -->
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- “*”代表所有方法都是事务方法 -->
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置基于注解的声明式事务 默认使用注解来管理事务行为 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>
